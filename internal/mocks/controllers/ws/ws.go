// Code generated by MockGen. DO NOT EDIT.
// Source: internal/controllers/ws/ws.go

// Package mock_ws is a generated GoMock package.
package mock_ws

import (
	exchange "financing-aggregator/internal/exchange"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockWebSocketHandler is a mock of WebSocketHandler interface.
type MockWebSocketHandler struct {
	ctrl     *gomock.Controller
	recorder *MockWebSocketHandlerMockRecorder
}

// MockWebSocketHandlerMockRecorder is the mock recorder for MockWebSocketHandler.
type MockWebSocketHandlerMockRecorder struct {
	mock *MockWebSocketHandler
}

// NewMockWebSocketHandler creates a new mock instance.
func NewMockWebSocketHandler(ctrl *gomock.Controller) *MockWebSocketHandler {
	mock := &MockWebSocketHandler{ctrl: ctrl}
	mock.recorder = &MockWebSocketHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebSocketHandler) EXPECT() *MockWebSocketHandlerMockRecorder {
	return m.recorder
}

// BroadcastNewOffer mocks base method.
func (m *MockWebSocketHandler) BroadcastNewOffer(appID string, offer exchange.OfferResponse) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BroadcastNewOffer", appID, offer)
}

// BroadcastNewOffer indicates an expected call of BroadcastNewOffer.
func (mr *MockWebSocketHandlerMockRecorder) BroadcastNewOffer(appID, offer interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BroadcastNewOffer", reflect.TypeOf((*MockWebSocketHandler)(nil).BroadcastNewOffer), appID, offer)
}

// CloseAll mocks base method.
func (m *MockWebSocketHandler) CloseAll() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CloseAll")
}

// CloseAll indicates an expected call of CloseAll.
func (mr *MockWebSocketHandlerMockRecorder) CloseAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseAll", reflect.TypeOf((*MockWebSocketHandler)(nil).CloseAll))
}

// SubscribeToApplicationUpdates mocks base method.
func (m *MockWebSocketHandler) SubscribeToApplicationUpdates(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SubscribeToApplicationUpdates", c)
}

// SubscribeToApplicationUpdates indicates an expected call of SubscribeToApplicationUpdates.
func (mr *MockWebSocketHandlerMockRecorder) SubscribeToApplicationUpdates(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubscribeToApplicationUpdates", reflect.TypeOf((*MockWebSocketHandler)(nil).SubscribeToApplicationUpdates), c)
}
